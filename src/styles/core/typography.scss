// html {
//   font-size: 16px;
// }

body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",
    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
code {
  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
}

@function pow($base, $exponent) {
  $result: 1;
  @for $_ from 1 through $exponent {
    $result: $result * $base;
  }
  @return $result;
}

@function roundToBaseline($value) {
  @return ceil($value / $baseline-grid) * $baseline-grid;
}

@function getTextSize($ratio, $exponent) {
  $multiplier: pow($ratio, $exponent);
  $unrounded: $base-font-size * $multiplier;
  @return ceil($unrounded / 2) * 2;
}

@mixin heading-base {
  font-weight: $font-medium;
  text-rendering: optimizeLegibility;
  color: $color-text-dark;
}

.title-1 {
  $size: getTextSize($type-scale-sm, 5);
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  letter-spacing: -0.01em;

  @include media-breakpoint-up(md) {
    $size: getTextSize($type-scale-md, 5);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }

  @include media-breakpoint-up(lg) {
    $size: getTextSize($type-scale-lg, 5);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }
}

.title-2 {
  $size: getTextSize($type-scale-sm, 4);
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  letter-spacing: -0.01em;

  @include media-breakpoint-up(md) {
    $size: getTextSize($type-scale-md, 4);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }

  @include media-breakpoint-up(lg) {
    $size: getTextSize($type-scale-lg, 4);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }
}

.title-3 {
  $size: getTextSize($type-scale-sm, 3);
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  letter-spacing: -0.01em;

  @include media-breakpoint-up(md) {
    $size: getTextSize($type-scale-md, 3);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }

  @include media-breakpoint-up(lg) {
    $size: getTextSize($type-scale-lg, 3);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }
}

.title-4 {
  $size: getTextSize($type-scale-sm, 2);
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  letter-spacing: -0.01em;

  @include media-breakpoint-up(md) {
    $size: getTextSize($type-scale-md, 2);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }

  @include media-breakpoint-up(lg) {
    $size: getTextSize($type-scale-lg, 2);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }
}

.title-5 {
  $size: getTextSize($type-scale-sm, 1);
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  letter-spacing: -0.01em;

  @include media-breakpoint-up(md) {
    $size: getTextSize($type-scale-md, 1);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }

  @include media-breakpoint-up(lg) {
    $size: getTextSize($type-scale-lg, 1);
    $height: roundToBaseline($size * $heading-line-height);

    font-size: rem($size);
    line-height: rem($height);
  }
}

.title-6 {
  $size: $base-font-size;
  $height: roundToBaseline($size * $heading-line-height);

  @include heading-base;
  font-size: rem($size);
  line-height: rem($height);
  text-transform: uppercase;
  letter-spacing: 0.02em;
}

.text {
  color: $color-text-dark;
}

.text-xs {
  $size: ceil($base-font-size / ($type-scale-sm * $type-scale-sm));
  $height: roundToBaseline($size * $text-line-height);

  font-size: rem($size);
  line-height: rem($height);
}

.text-sm {
  $size: ceil($base-font-size / $type-scale-sm);
  $height: roundToBaseline($size * $text-line-height);

  font-size: rem($size);
  line-height: rem($height);
}

.text-md {
  $size: $base-font-size;
  $height: roundToBaseline($size * $text-line-height);

  font-size: rem($size);
  line-height: rem($height);
}

.text-lg {
  $size: getTextSize($type-scale-sm, 1);
  $height: roundToBaseline($size * $text-line-height);

  font-size: rem($size);
  line-height: rem($height);
}

.text-xl {
  $size: getTextSize($type-scale-sm, 2);
  $height: roundToBaseline($size * $text-line-height);

  font-size: rem($size);
  line-height: rem($height);
}

.text-dark-gray {
  color: $color-text-dark-gray;
}

.text-gray {
  color: $color-text-gray;
}

.text-500 {
  font-weight: $font-medium;
}

.text-600 {
  font-weight: $font-semibold;
}

.text-700 {
  font-weight: $font-bold;
}

.text-800 {
  font-weight: $font-heavy;
}

.text-900 {
  font-weight: $font-black;
}

.text-truncate {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
